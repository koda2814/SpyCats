#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 7.5
#  in conjunction with Tcl version 8.6
#    Nov 18, 2022 12:04:11 AM AEST  platform: Windows NT

import sys
import tkinter as tk
import tkinter.ttk as ttk
from tkinter.constants import *
import os.path

_script = sys.argv[0]
_location = os.path.dirname(_script)

import SpyCats_GUI_support

_bgcolor = '#d9d9d9'  # X11 color: 'gray85'
_fgcolor = '#000000'  # X11 color: 'black'
_compcolor = 'gray40' # X11 color: #666666
_ana1color = '#c3c3c3' # Closest X11 color: 'gray76'
_ana2color = 'beige' # X11 color: #f5f5dc
_tabfg1 = 'black' 
_tabfg2 = 'black' 
_tabbg1 = 'grey75' 
_tabbg2 = 'grey89' 
_bgmode = 'light' 

_style_code_ran = 0
def _style_code():
    global _style_code_ran
    if _style_code_ran:
       return
    style = ttk.Style()
    if sys.platform == "win32":
       style.theme_use('winnative')
    style.configure('.',background=_bgcolor)
    style.configure('.',foreground=_fgcolor)
    style.configure('.',font='TkDefaultFont')
    style.map('.',background =
       [('selected', _compcolor), ('active',_ana2color)])
    if _bgmode == 'dark':
       style.map('.',foreground =
         [('selected', 'white'), ('active','white')])
    else:
       style.map('.',foreground =
         [('selected', 'black'), ('active','black')])
    _style_code_ran = 1

class Toplevel1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''

        top.geometry("941x658+273+63")
        top.minsize(120, 1)
        top.maxsize(1540, 845)
        top.resizable(1,  1)
        top.title("SpyCats")
        top.configure(relief="raised")
        top.configure(background="#1a1a1a")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.top = top
        self.che52 = tk.IntVar()

        self.Frame_img = tk.Frame(self.top)
        self.Frame_img.place(relx=0.032, rely=0.061, relheight=0.422
                , relwidth=0.38)
        self.Frame_img.configure(relief='solid')
        self.Frame_img.configure(borderwidth="1")
        self.Frame_img.configure(relief="solid")
        self.Frame_img.configure(background="#242b29")
        self.Frame_img.configure(highlightbackground="#d9d9d9")
        self.Frame_img.configure(highlightcolor="black")

        self.Frame_msg = tk.Frame(self.top)
        self.Frame_msg.place(relx=0.47, rely=0.056, relheight=0.298
                , relwidth=0.492)
        self.Frame_msg.configure(relief='solid')
        self.Frame_msg.configure(borderwidth="1")
        self.Frame_msg.configure(relief="solid")
        self.Frame_msg.configure(background="#242b29")
        self.Frame_msg.configure(highlightbackground="#d9d9d9")
        self.Frame_msg.configure(highlightcolor="black")

        self.Text_msg = tk.Text(self.Frame_msg)
        self.Text_msg.place(x=0, y=0)
        self.Text_msg.configure(background="#242b29")
        self.Text_msg.configure(foreground="#eaecec")
        # self.Text_msg.configure()
        # self.Text_msg.configure()
        # self.Text_msg.configure()
        # self.Text_msg.configure()

        self.btn_open_image = tk.Button(self.top)
        self.btn_open_image.place(relx=0.031, rely=0.515, height=44, width=177)
        self.btn_open_image.configure(activebackground="#898970")
        self.btn_open_image.configure(activeforeground="black")
        self.btn_open_image.configure(background="#37423f")
        self.btn_open_image.configure(compound='left')
        self.btn_open_image.configure(disabledforeground="#a3a3a3")
        self.btn_open_image.configure(font="-family {Lucida Console} -size 10")
        self.btn_open_image.configure(foreground="#eaecec")
        self.btn_open_image.configure(highlightbackground="#d9d9d9")
        self.btn_open_image.configure(highlightcolor="#788f89")
        self.btn_open_image.configure(overrelief="groove")
        self.btn_open_image.configure(pady="0")
        self.btn_open_image.configure(text='''Открыть Изображение''')

        self.btn_save_image = tk.Button(self.top)
        self.btn_save_image.place(relx=0.231, rely=0.515, height=44, width=177)
        self.btn_save_image.configure(activebackground="#898970")
        self.btn_save_image.configure(activeforeground="black")
        self.btn_save_image.configure(background="#37423f")
        self.btn_save_image.configure(compound='left')
        self.btn_save_image.configure(disabledforeground="#a3a3a3")
        self.btn_save_image.configure(font="-family {Lucida Console} -size 10")
        self.btn_save_image.configure(foreground="#e0e4e3")
        self.btn_save_image.configure(highlightbackground="#d9d9d9")
        self.btn_save_image.configure(highlightcolor="#788f89")
        self.btn_save_image.configure(overrelief="groove")
        self.btn_save_image.configure(pady="0")
        self.btn_save_image.configure(text='''Сохранить Изображение''')

        self.btn_dowload_image = tk.Button(self.top)
        self.btn_dowload_image.place(relx=0.031, rely=0.597, height=44
                , width=367)
        self.btn_dowload_image.configure(activebackground="#898970")
        self.btn_dowload_image.configure(activeforeground="black")
        self.btn_dowload_image.configure(background="#37423f")
        self.btn_dowload_image.configure(compound='left')
        self.btn_dowload_image.configure(disabledforeground="#a3a3a3")
        self.btn_dowload_image.configure(font="-family {Lucida Console} -size 10")
        self.btn_dowload_image.configure(foreground="#e0e4e3")
        self.btn_dowload_image.configure(highlightbackground="#d9d9d9")
        self.btn_dowload_image.configure(highlightcolor="#788f89")
        self.btn_dowload_image.configure(overrelief="groove")
        self.btn_dowload_image.configure(pady="0")
        self.btn_dowload_image.configure(text='''Загрузить случайное Изображение''')

        _style_code()
        self.TSeparator1 = ttk.Separator(self.top)
        self.TSeparator1.place(relx=0.446, rely=0.061,  relheight=0.597)
        self.TSeparator1.configure(orient="vertical")

        self.Label1 = tk.Label(self.top)
        self.Label1.place(relx=0.032, rely=0.015, height=21, width=158)
        self.Label1.configure(anchor='w')
        self.Label1.configure(background="#1a1a1a")
        self.Label1.configure(compound='left')
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(foreground="#bbc1bd")
        self.Label1.configure(text='''Изображение''')

        self.Label1_1 = tk.Label(self.top)
        self.Label1_1.place(relx=0.468, rely=0.015, height=21, width=158)
        self.Label1_1.configure(activebackground="#f9f9f9")
        self.Label1_1.configure(anchor='w')
        self.Label1_1.configure(background="#1a1a1a")
        self.Label1_1.configure(compound='left')
        self.Label1_1.configure(disabledforeground="#a3a3a3")
        self.Label1_1.configure(foreground="#bbc1bd")
        self.Label1_1.configure(highlightbackground="#d9d9d9")
        self.Label1_1.configure(highlightcolor="black")
        self.Label1_1.configure(text='''Сообщение''')

        self.Label1_1_1 = tk.Label(self.top)
        self.Label1_1_1.place(relx=0.489, rely=0.372, height=21, width=275)
        self.Label1_1_1.configure(activebackground="#f9f9f9")
        self.Label1_1_1.configure(anchor='w')
        self.Label1_1_1.configure(background="#1a1a1a")
        self.Label1_1_1.configure(compound='left')
        self.Label1_1_1.configure(disabledforeground="#a3a3a3")
        self.Label1_1_1.configure(font="-family {Lucida Sans Unicode} -size 11")
        self.Label1_1_1.configure(foreground="#bbc1bd")
        self.Label1_1_1.configure(highlightbackground="#d9d9d9")
        self.Label1_1_1.configure(highlightcolor="black")
        self.Label1_1_1.configure(text='''Использовать ключ шифрования''')

        self.Checkbutton_use_key = tk.Checkbutton(self.top)
        self.Checkbutton_use_key.place(relx=0.468, rely=0.372, relheight=0.038
                , relwidth=0.021)
        self.Checkbutton_use_key.configure(activebackground="#151117")
        self.Checkbutton_use_key.configure(activeforeground="black")
        self.Checkbutton_use_key.configure(anchor='w')
        self.Checkbutton_use_key.configure(background="#1a1a1a")
        self.Checkbutton_use_key.configure(compound='left')
        self.Checkbutton_use_key.configure(disabledforeground="#a3a3a3")
        self.Checkbutton_use_key.configure(foreground="#000000")
        self.Checkbutton_use_key.configure(highlightbackground="#d9d9d9")
        self.Checkbutton_use_key.configure(highlightcolor="black")
        self.Checkbutton_use_key.configure(justify='left')
        self.Checkbutton_use_key.configure(selectcolor="#d9d9d9")
        self.Checkbutton_use_key.configure(variable=self.che52)

        self.Entry1 = tk.Entry(self.top)
        self.Entry1.place(relx=0.468, rely=0.456, height=20, relwidth=0.493)
        self.Entry1.configure(background="#5f5f5f")
        self.Entry1.configure(cursor="fleur")
        self.Entry1.configure(disabledforeground="#a3a3a3")
        self.Entry1.configure(font="TkFixedFont")
        self.Entry1.configure(foreground="#000000")
        self.Entry1.configure(insertbackground="black")

        self.Label1_1_2 = tk.Label(self.top)
        self.Label1_1_2.place(relx=0.468, rely=0.429, height=11, width=158)
        self.Label1_1_2.configure(activebackground="#f9f9f9")
        self.Label1_1_2.configure(anchor='w')
        self.Label1_1_2.configure(background="#1a1a1a")
        self.Label1_1_2.configure(compound='left')
        self.Label1_1_2.configure(disabledforeground="#a3a3a3")
        self.Label1_1_2.configure(foreground="#bbc1bd")
        self.Label1_1_2.configure(highlightbackground="#d9d9d9")
        self.Label1_1_2.configure(highlightcolor="black")
        self.Label1_1_2.configure(text='''Ключ (AES-256)''')

        self.btn_encrypt = tk.Button(self.top)
        self.btn_encrypt.place(relx=0.468, rely=0.517, height=44, width=227)
        self.btn_encrypt.configure(activebackground="#898970")
        self.btn_encrypt.configure(activeforeground="black")
        self.btn_encrypt.configure(background="#37423f")
        self.btn_encrypt.configure(compound='left')
        self.btn_encrypt.configure(disabledforeground="#a3a3a3")
        self.btn_encrypt.configure(font="-family {Lucida Console} -size 10")
        self.btn_encrypt.configure(foreground="#eaecec")
        self.btn_encrypt.configure(highlightbackground="#d9d9d9")
        self.btn_encrypt.configure(highlightcolor="#788f89")
        self.btn_encrypt.configure(overrelief="groove")
        self.btn_encrypt.configure(pady="0")
        self.btn_encrypt.configure(text='''Шифровать''')

        self.btn_decrypt = tk.Button(self.top)
        self.btn_decrypt.place(relx=0.723, rely=0.517, height=44, width=227)
        self.btn_decrypt.configure(activebackground="#898970")
        self.btn_decrypt.configure(activeforeground="black")
        self.btn_decrypt.configure(background="#37423f")
        self.btn_decrypt.configure(compound='left')
        self.btn_decrypt.configure(disabledforeground="#a3a3a3")
        self.btn_decrypt.configure(font="-family {Lucida Console} -size 10")
        self.btn_decrypt.configure(foreground="#eaecec")
        self.btn_decrypt.configure(highlightbackground="#d9d9d9")
        self.btn_decrypt.configure(highlightcolor="#788f89")
        self.btn_decrypt.configure(overrelief="groove")
        self.btn_decrypt.configure(pady="0")
        self.btn_decrypt.configure(text='''Расшифровать''')

        self.btn_gen_key = tk.Button(self.top)
        self.btn_gen_key.place(relx=0.468, rely=0.597, height=43, width=467)
        self.btn_gen_key.configure(activebackground="#898970")
        self.btn_gen_key.configure(activeforeground="black")
        self.btn_gen_key.configure(background="#37423f")
        self.btn_gen_key.configure(compound='left')
        self.btn_gen_key.configure(disabledforeground="#a3a3a3")
        self.btn_gen_key.configure(font="-family {Lucida Console} -size 10")
        self.btn_gen_key.configure(foreground="#eaecec")
        self.btn_gen_key.configure(highlightbackground="#d9d9d9")
        self.btn_gen_key.configure(highlightcolor="#788f89")
        self.btn_gen_key.configure(overrelief="groove")
        self.btn_gen_key.configure(pady="0")
        self.btn_gen_key.configure(text='''Сгенерировать случайный ключ''')

        self.Frame_cmd = tk.Frame(self.top)
        self.Frame_cmd.place(relx=0.032, rely=0.731, relheight=0.24
                , relwidth=0.937)
        self.Frame_cmd.configure(relief='groove')
        self.Frame_cmd.configure(borderwidth="1")
        self.Frame_cmd.configure(relief="groove")
        self.Frame_cmd.configure(background="#0a0a0a")
        self.Frame_cmd.configure(highlightbackground="#d9d9d9")
        self.Frame_cmd.configure(highlightcolor="black")

        self.Label1_1_3 = tk.Label(self.top)
        self.Label1_1_3.place(relx=0.033, rely=0.693, height=21, width=159)
        self.Label1_1_3.configure(activebackground="#f9f9f9")
        self.Label1_1_3.configure(anchor='w')
        self.Label1_1_3.configure(background="#1a1a1a")
        self.Label1_1_3.configure(compound='left')
        self.Label1_1_3.configure(disabledforeground="#a3a3a3")
        self.Label1_1_3.configure(foreground="#bbc1bd")
        self.Label1_1_3.configure(highlightbackground="#d9d9d9")
        self.Label1_1_3.configure(highlightcolor="black")
        self.Label1_1_3.configure(text='''Консоль''')

        self.TSeparator2 = ttk.Separator(self.top)
        self.TSeparator2.place(relx=0.032, rely=0.684,  relwidth=0.937)

        self.menubar = tk.Menu(top,font="TkMenuFont",bg=_bgcolor,fg=_fgcolor)
        top.configure(menu = self.menubar)

def start_up():
    SpyCats_GUI_support.main()

if __name__ == '__main__':
    SpyCats_GUI_support.main()




